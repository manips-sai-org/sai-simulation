name: 'Build'
description: 'Builds the repository'
inputs:
  token:
    description: 'token to download artifacts'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install dependencies library and prepare dependency folder
      shell: bash
      run: |
        mkdir ../dep
        sudo apt-get update
        sudo apt-get install libeigen3-dev libtinyxml2-dev libgtest-dev
        sudo apt-get install libasound2-dev libusb-1.0.0-dev freeglut3-dev xorg-dev libglew-dev
        sudo apt-get install libglfw3-dev

    - name: Setup Sai2-urdfreader
      shell: bash
      run: |
        # clone repo and run cmake
        cd ../dep
        git clone https://github.com/manips-sai-org/sai2-urdfreader.git
        cd  sai2-urdfreader
        mkdir build && cd build && cmake ..

        # Get the latest artifact from the master branch
        LATEST_ARTIFACT=$(curl -s -X GET \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          https://api.github.com/repos/manips-sai-org/sai2-urdfreader/actions/artifacts?branch=master \
          | jq -r '.artifacts[0].id')

        # Download the artifact using the latest artifact ID to get the library
        curl -L \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          https://api.github.com/repos/manips-sai-org/sai2-urdfreader/actions/artifacts/${LATEST_ARTIFACT}/zip --output lib.zip

        unzip lib.zip

    - name: Setup Sai2-model
      shell: bash
      run: |
        # clone repo
        cd ../dep
        git clone https://github.com/manips-sai-org/sai2-model.git
        cd  sai2-model
        cd rbdl && mkdir build && cd build && cmake -DRBDL_BUILD_ADDON_URDFREADER=ON ..
        cd ../.. && mkdir build && cd build

        # Get the latest artifact from the master branch
        LATEST_ARTIFACT=$(curl -s -X GET \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          https://api.github.com/repos/manips-sai-org/sai2-model/actions/artifacts?branch=master \
          | jq -r '.artifacts[0].id')

        # Download the artifact using the latest artifact ID to get the library
        curl -L \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          https://api.github.com/repos/manips-sai-org/sai2-model/actions/artifacts/${LATEST_ARTIFACT}/zip --output lib.zip

        unzip lib.zip
        mv librbdl.so ../rbdl/build

        # run cmake
        cmake ..

    - name: Setup chai3d
      shell: bash
      run: |
        # clone repo and run cmake
        cd ../dep
        git clone https://github.com/manips-sai-org/chai3d.git
        cd  chai3d
        mkdir build && cd build && cmake ..

        # Get the latest artifact from the master branch
        LATEST_ARTIFACT=$(curl -s -X GET \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          https://api.github.com/repos/manips-sai-org/chai3d/actions/artifacts?branch=master \
          | jq -r '.artifacts[0].id')

        # Download the artifact using the latest artifact ID to get the library
        curl -L \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          https://api.github.com/repos/manips-sai-org/chai3d/actions/artifacts/${LATEST_ARTIFACT}/zip --output lib.zip

        unzip lib.zip

    - name: Setup sai2-graphics
      shell: bash
      run: |
        # clone repo and run cmake
        cd ../dep
        git clone https://github.com/manips-sai-org/sai2-graphics.git
        cd  sai2-graphics
        mkdir build && cd build && cmake ..

        # Get the latest artifact from the master branch
        LATEST_ARTIFACT=$(curl -s -X GET \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          https://api.github.com/repos/manips-sai-org/sai2-graphics/actions/artifacts?branch=master \
          | jq -r '.artifacts[0].id')

        # Download the artifact using the latest artifact ID to get the library
        curl -L \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          https://api.github.com/repos/manips-sai-org/sai2-graphics/actions/artifacts/${LATEST_ARTIFACT}/zip --output lib.zip

        unzip lib.zip

    - name: Build Sai2-Simulation
      shell: bash
      run: |
        export CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:dep/*
        mkdir build && cd build
        cmake .. && make -j8

    - name: Check build status
      shell: bash
      run: |
        cd build
        make --always-make --dry-run